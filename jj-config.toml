[ui]
editor = "nvim"

[aliases]
drop = ["abandon"]
xl = ["log", "--no-pager"]
up = ["edit"]
sync = ["rebase", "-b", "@", "-d", "trunk()"]
integrate = ["squash", "-r", "@+"]
mmaster = ["bookmark", "move", "--from", "master", "--to", "master@origin"]
pdiff = ["diff", "-r", "@-"]
mdiff = ["diff", "--from", "master"]
promote = ["bookmark", "move", "--from", "bookmarks() & ..@ & (~(..bookmarks()-))"]
abs = ["absorb"]
squash-back = ["util", "exec", "--", "bash", "-c", """
#!/usr/bin/env bash
jj edit @-
jj squash
""", ""]
precommit = ["util", "exec", "--", "bash", "-c", """
#!/usr/bin/env bash
if [[ -z $(jj diff) ]]; then
    diff_files=$(jj log --no-graph -T 'diff.summary()' -r '@-' | awk '{print $2}' | xargs)
else
    diff_files=$(jj log --no-graph -T 'diff.summary()' -r '@' | awk '{print $2}' | xargs)
    jj new
fi
if [ -z "$diff_files" ]; then
  echo "No files to check with precommit"
  exit
fi
pre-commit run --files $diff_files

if [[ -z $(jj diff) ]]; then
   jj abandon
   echo "No changes from precommit!"
   exit 0
fi
jj describe -m 'Apply changes from precommit:'
""", ""]
apply_precommit = ["squash", "-r", "precommits & @+"]

[revset-aliases]
tip = 'heads(@::)'
precommits = """mutable() & description(regex:"^Apply changes from precommit:.*?")"""

[fix.tools.pre-commit]
command = ["bash", "-c", "cat; pre-commit run --files $path  > /dev/null 2> /dev/null"]
patterns = ["glob:'**/*'"]
